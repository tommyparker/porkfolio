---
import Container from '../layouts/Container.astro';
import Logo from './Logo.astro';

const url = new URL(Astro.request.url);

const pathSegments = url.pathname.replace(/\/$/, '').split('/');
const currentPath = pathSegments.pop() || '';

const isProjectPage = pathSegments.includes('projects');
const isNewsPost = pathSegments.includes('posts');
---

<Container animate={false} class="navigation flex flex-col w-full fixed top-0 z-50 bg-paper dark:bg-ink-950 pb-0">
    <div class="flex md:grid md:grid-cols-2 items-center md:gap-4 w-full">
        <div class="flex items-center">
          <a href="/">
              <Logo class="h-6 lg:h-7 xl:h-8 w-auto" />
          </a>
        </div>
        <div class="menu flex gap-4 md:gap-8 ml-auto md:ml-0">
            <a class={`${currentPath === "" || isProjectPage ? "active" : ""} after-blue`} href="/">Work</a>
            <a class={`${currentPath === "news" || isNewsPost ? "active" : ""} after-red`} href="/news">News</a>
            <a class={`${currentPath === "info" ? "active" : ""} after-yellow`} href="/info">Info</a>
            <a class={`${currentPath === "contact" ? "active" : ""} after-pink`} href="#contact">Contact</a>
        </div>
    </div>
    <div class="block h-[1px] bg-ink-50 dark:bg-ink-900 w-full mt-3"></div>
</Container>

<script>
  import { animate } from "motion";

  function init() {
    const nav = document.querySelector(".navigation");
    
    // Add this at the start of init to set the nav height
    document.documentElement.style.setProperty('--nav-height', `${nav.offsetHeight}px`);
    
    let lastScrollY = 0;
    let animationInProgress = false;

    function animateNav(hidden) {
      if (!animationInProgress) {
        animationInProgress = true;
        
        // Update the nav-offset when hiding/showing navigation
        document.documentElement.style.setProperty('--nav-offset', hidden ? '0px' : `${nav.offsetHeight}px`);
        
        animate(
          nav,
          { 
            transform: hidden ? "translateY(-100%)" : "translateY(0%)" 
          },
          { 
            duration: 0.3,
            easing: [0.75, 0, 0.25, 1],
            onComplete: () => {
              animationInProgress = false;
            }
          }
        );
      }
    }

    // Handle scroll
    function handleScroll() {
      const currentScrollY = window.scrollY;
      
      if (currentScrollY > lastScrollY && currentScrollY > 96) {
        // Scrolling down
        animateNav(true);
      } else {
        // Scrolling up
        animateNav(false);
      }
      
      lastScrollY = currentScrollY;
    }

    // Show nav when hovering near top of screen
    function handleMouseNearTop(e) {
      if (e.clientY <= 50) {
        animateNav(false);
      }
    }

    // Show nav when focusing any element inside
    nav.addEventListener('focusin', () => {
      animateNav(false);
    });

    window.addEventListener('scroll', () => {
      // Debounce scroll events for better performance
      requestAnimationFrame(handleScroll);
    });
    
    document.addEventListener('mousemove', handleMouseNearTop);
  }

  // Initialise on first load
  init()

  // Re-initialise after swapping pages
  document.addEventListener("astro:after-swap", init)
</script>